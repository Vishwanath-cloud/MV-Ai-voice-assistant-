import speech_recognition as sr
import pyttsx3
import datetime
import webbrowser
import wikipedia

# Initialize the voice engine
engine = pyttsx3.init()
voices = engine.getProperty('voices')
engine.setProperty('voice', voices[1].id)  # Female voice
engine.setProperty('rate', 170)

def speak(text):
    print("MV-AI:", text)
    engine.say(text)
    engine.runAndWait()

def listen():
    recognizer = sr.Recognizer()
    with sr.Microphone() as source:
        print("üéôÔ∏è Listening...")
        recognizer.pause_threshold = 1
        audio = recognizer.listen(source)

    try:
        command = recognizer.recognize_google(audio, language='en-in')
        print("You said:", command)
    except Exception:
        speak("Sorry, I didn't catch that.")
        return ""
    return command.lower()

def wish_user():
    hour = datetime.datetime.now().hour
    if 0 <= hour < 12:
        speak("Good morning Vishwanath!")
    elif 12 <= hour < 18:
        speak("Good afternoon Vishwanath!")
    else:
        speak("Good evening Vishwanath!")
    speak("I am MV-AI, your voice assistant. How can I help you?")

def handle_command(command):
    if "time" in command:
        time = datetime.datetime.now().strftime("%I:%M %p")
        speak(f"The current time is {time}")

    elif "date" in command:
        date = datetime.datetime.now().strftime("%B %d, %Y")
        speak(f"Today is {date}")

    elif "open youtube" in command:
        speak("Opening YouTube")
        webbrowser.open("https://www.youtube.com")

    elif "open google" in command:
        speak("Opening Google")
        webbrowser.open("https://www.google.com")

    elif "who is" in command:
        person = command.replace("who is", "")
        info = wikipedia.summary(person, sentences=2)
        speak(info)

    elif "exit" in command or "bye" in command:
        speak("Goodbye Vishwanath. See you soon!")
        exit()

    else:
        speak("I'm still learning. Please try something else.")

if __name__ == "__main__":
    wish_user()
    while True:
        command = listen()
        if command:
            handle_command(command)
